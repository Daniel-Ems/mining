def perimeterSearch(self, context): 
        if getattr(context, self.direction.lower()) in "#~Z":
            if self.barrier == "#":
                if self.startSearch == "NONE":
                    self.startSearch = (context.x, context.y)
                    print("Start Search", self.startSearch)
            self.barrier = getattr(context, self.direction.lower())
            self.direction = self.makeTurn(context,"right")
            self.direction = self.mineCheck(context)
            return self.direction

        if self.startSearch != "NONE":
            left = self.makeTurn(context, "left")
            if getattr(context,left.lower()) != self.barrier:
                self.direction = self.makeTurn(context, "left")
        self.direction = self.mineCheck(context)
        return self.direction


if goal = "border":
                if self.startSearch == "NONE" and context.x | context.y == 1:
                    self.startSearch == (context.x, context.y)
            else:
                if self.direction == "NORTH" | "SOUTH":
                    self.xCheck = context.x
                elif self.direction == "WEST" | "EAST"
                    self.yCheck = context.y

def perimeterSearch(self, context):

        if getattr(context, self.direction.lower()) in "#~Z":
            if getattr(context, self.direction.lower()) == "#":
                if self.startSearch == "NONE":
                    self.startSearch = (context.x, context.y)
                    self.direction = self.mineCheck(context)
                    return self.rightTurn(context)
            if self.startSearch != "NONE":
                left = self.makeTurn(context, "left")
                if getattr(context, left.lower()) not in "#~Z" and self.leftTurns <= self.rightTurns:
                    self.direction = self.mineCheck(context)
                    self.leftTurns += 1
                    return left
            self.direction = self.rightTurn(context)
            self.direction = self.mineCheck(context)
            return self.direction


        if self.rightTurns > 0 and self.leftTurns <= self.rightTurns:
            self.direction = self.leftTurn(context)
            self.direction = self.mineCheck(context)
            return self.direction


        elif self.leftTurns > self.rightTurns:
            self.leftTurns = self.rightTurns = 0
            self.detour = False
            self.direction = self.rightTurn(context)

        self.direction = self.mineCheck(context)
        return self.direction





if (context.x, context.y) == self.startSearch and self.rightTurns >= 4:
                print("Start Found")
                self.getInstructions()
                self.borderPatrol = False
                return self.rightTurn(context)




 if self.rightTurns >= self.leftTurns:
                left = self.leftTurn(context)
                if left != "NONE":
                    return left
                right = self.rightTurn(context)
            
            if self.leftTurns > self.rightTurns:
                self.leftTurns = self.rightTurns = 0
                return self.rightTurn(context)
        else:

            if self.rightTurns >= self.leftTurns:
                left = self.leftTurn(context)
                if left != "NONE":
                    return left
                return self.direction

            if self.leftTurns > self.rightTurns:
                self.leftTurns = self.rightTurns = 0
                return self.rightTurn(context)
